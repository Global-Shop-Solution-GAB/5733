Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("5733 - Purchasing Dashboard by AVL")
Gui.Form..Size(1024,720)
Gui.Form..MinX(1024)
Gui.Form..MinY(720)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form..Event(Resize,Form_Resize)
Gui.Form.frmSearchBy.Create(Frame)
Gui.Form.frmSearchBy.Enabled(True)
Gui.Form.frmSearchBy.Visible(True)
Gui.Form.frmSearchBy.Zorder(0)
Gui.Form.frmSearchBy.Size(338,88)
Gui.Form.frmSearchBy.Position(10,10)
Gui.Form.frmSearchBy.Caption("Search By")
Gui.Form.frmSearchBy.FontName("Tahoma")
Gui.Form.frmSearchBy.FontSize(8.25)
Gui.Form.frmSearchBy.BorderStyle(3)
Gui.Form.txtBOMParent.Create(TextBox,"",True,100,20,0,9,38,True,0,"Tahoma",8.25,,1)
Gui.Form.txtBOMParent.Parent("frmSearchBy")
Gui.Form.lbl12.Create(Label,"BOM Parent",True,57,13,0,10,23,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl12.BorderStyle(0)
Gui.Form.lbl12.Parent("frmSearchBy")
Gui.Form.txtBuyercode.Create(TextBox,"",True,100,20,0,117,38,True,0,"Tahoma",8.25,,1)
Gui.Form.txtBuyercode.Parent("frmSearchBy")
Gui.Form.txtBuyercode.ToolTip("Multiple buyer codes can be specified as comma separated values (i.e. BuyerCode1, BuyerCode2, etc.)")
Gui.Form.lbl13.Create(Label,"Buyer Code",True,56,13,0,119,23,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl13.BorderStyle(0)
Gui.Form.lbl13.Parent("frmSearchBy")
Gui.Form.cmdApply.Create(Button)
Gui.Form.cmdApply.Enabled(True)
Gui.Form.cmdApply.Visible(True)
Gui.Form.cmdApply.Zorder(0)
Gui.Form.cmdApply.Size(95,23)
Gui.Form.cmdApply.Position(119,61)
Gui.Form.cmdApply.Caption("Apply")
Gui.Form.cmdApply.FontName("Tahoma")
Gui.Form.cmdApply.FontSize(8.25)
Gui.Form.cmdApply.Parent("frmSearchBy")
Gui.Form.cmdApply.Event(Click,cmdApply_Click)
Gui.Form.dtpCutoffDate.Create(DatePicker)
Gui.Form.dtpCutoffDate.Enabled(False)
Gui.Form.dtpCutoffDate.Visible(True)
Gui.Form.dtpCutoffDate.Zorder(0)
Gui.Form.dtpCutoffDate.Size(100,20)
Gui.Form.dtpCutoffDate.Position(235,48)
Gui.Form.dtpCutoffDate.CheckBox(False)
Gui.Form.dtpCutoffDate.FontName("Tahoma")
Gui.Form.dtpCutoffDate.FontSize(8.25)
Gui.Form.chkCutoff.Create(CheckBox)
Gui.Form.chkCutoff.Enabled(True)
Gui.Form.chkCutoff.Visible(True)
Gui.Form.chkCutoff.Zorder(0)
Gui.Form.chkCutoff.Size(108,20)
Gui.Form.chkCutoff.Position(237,26)
Gui.Form.chkCutoff.Caption("WO Cutoff Date")
Gui.Form.chkCutoff.FontName("Tahoma")
Gui.Form.chkCutoff.FontSize(8.25)
Gui.Form.chkCutoff.Event(Change,chkWOCutoffDate_Change)
Gui.Form.GsGcDisplay.Create(GsGridControl)
Gui.Form.GsGcDisplay.Enabled(True)
Gui.Form.GsGcDisplay.Visible(True)
Gui.Form.GsGcDisplay.Zorder(0)
Gui.Form.GsGcDisplay.Size(1024,380)
Gui.Form.GsGcDisplay.Position(0,105)
Gui.Form.GsGcDisplay.Anchor(15)
Gui.Form.GsGcDisplay.Event(RowCellClick,GsGcDisplay_RowCellClick)
Gui.Form.GsGcDisplay.Event(CellValueChanged,GsGcDisplay_CellValueChanged)
Gui.Form.frmAVL.Create(Frame)
Gui.Form.frmAVL.Enabled(True)
Gui.Form.frmAVL.Visible(True)
Gui.Form.frmAVL.Zorder(0)
Gui.Form.frmAVL.Size(508,196)
Gui.Form.frmAVL.Position(0,491)
Gui.Form.frmAVL.Caption("AVL OnHand")
Gui.Form.frmAVL.FontName("Tahoma")
Gui.Form.frmAVL.FontSize(8.25)
Gui.Form.frmAVL.Anchor(6)
Gui.Form.frmAVL.BorderStyle(1)
Gui.Form.GsGcAVL.Create(GsGridControl)
Gui.Form.GsGcAVL.Enabled(True)
Gui.Form.GsGcAVL.Visible(True)
Gui.Form.GsGcAVL.Zorder(0)
Gui.Form.GsGcAVL.Size(508,170)
Gui.Form.GsGcAVL.Position(0,26)
Gui.Form.GsGcAVL.Parent("frmAVL")
Gui.Form.GsGcAVL.Dock(5)
Gui.Form.GsGcAVL.Event(CellValueChanged,GsGcAVL_CellValueChanged)
Gui.Form.FormHist.Create(Frame)
Gui.Form.FormHist.Enabled(True)
Gui.Form.FormHist.Visible(True)
Gui.Form.FormHist.Zorder(0)
Gui.Form.FormHist.Size(506,196)
Gui.Form.FormHist.Position(515,491)
Gui.Form.FormHist.Caption("PO History")
Gui.Form.FormHist.FontName("Tahoma")
Gui.Form.FormHist.FontSize(8.25)
Gui.Form.FormHist.BorderStyle(1)
Gui.Form.FormHist.Anchor(6)
Gui.Form.GsGcPOHistory.Create(GsGridControl)
Gui.Form.GsGcPOHistory.Enabled(True)
Gui.Form.GsGcPOHistory.Visible(True)
Gui.Form.GsGcPOHistory.Zorder(0)
Gui.Form.GsGcPOHistory.Size(508,170)
Gui.Form.GsGcPOHistory.Position(0,26)
Gui.Form.GsGcPOHistory.Dock(5)
Gui.Form.GsGcPOHistory.Parent("FormHist")
Gui.Form.GsGcPOHistory.Event(RowCellClick,GsGcPOHistory_RowCellClick)
Gui.Form.picGssLogo.Create(PictureBox)
Gui.Form.picGssLogo.Enabled(True)
Gui.Form.picGssLogo.Visible(True)
Gui.Form.picGssLogo.Zorder(0)
Gui.Form.picGssLogo.Size(253,70)
Gui.Form.picGssLogo.Position(384,18)
Gui.Form.picGssLogo.SizeMode(4)
Gui.Form.frame1.Create(Frame)
Gui.Form.frame1.Enabled(True)
Gui.Form.frame1.Visible(True)
Gui.Form.frame1.Zorder(0)
Gui.Form.frame1.Size(200,100)
Gui.Form.frame1.Position(821,3)
Gui.Form.frame1.Caption("")
Gui.Form.frame1.FontName("Tahoma")
Gui.Form.frame1.FontSize(8.25)
Gui.Form.frame1.BorderStyle(3)
Gui.Form.frame1.Anchor(9)
Gui.Form.ddlCost.Create(DropDownList)
Gui.Form.ddlCost.Enabled(True)
Gui.Form.ddlCost.Visible(True)
Gui.Form.ddlCost.Zorder(0)
Gui.Form.ddlCost.Size(196,20)
Gui.Form.ddlCost.Position(2,3)
Gui.Form.ddlCost.FontName("Tahoma")
Gui.Form.ddlCost.FontSize(8.25)
Gui.Form.ddlCost.Parent("frame1")
Gui.Form.ddlCost.Event(Click,SaveCostOpt)
Gui.Form.ddlPOs.Create(DropDownList)
Gui.Form.ddlPOs.Enabled(True)
Gui.Form.ddlPOs.Visible(True)
Gui.Form.ddlPOs.Zorder(0)
Gui.Form.ddlPOs.Size(196,20)
Gui.Form.ddlPOs.Position(2,26)
Gui.Form.ddlPOs.FontName("Tahoma")
Gui.Form.ddlPOs.FontSize(8.25)
Gui.Form.ddlPOs.Parent("frame1")
Gui.Form.ddlPOs.Event(Click,SavePOOpt)
Gui.Form.ddlEmail.Create(DropDownList)
Gui.Form.ddlEmail.Enabled(True)
Gui.Form.ddlEmail.Visible(True)
Gui.Form.ddlEmail.Zorder(0)
Gui.Form.ddlEmail.Size(196,20)
Gui.Form.ddlEmail.Position(2,49)
Gui.Form.ddlEmail.FontName("Tahoma")
Gui.Form.ddlEmail.FontSize(8.25)
Gui.Form.ddlEmail.Parent("frame1")
Gui.Form.ddlEmail.Event(Click,SaveEmailOpt)
Gui.Form.cmdCreatePOs.Create(Button)
Gui.Form.cmdCreatePOs.Enabled(True)
Gui.Form.cmdCreatePOs.Visible(True)
Gui.Form.cmdCreatePOs.Zorder(0)
Gui.Form.cmdCreatePOs.Size(75,23)
Gui.Form.cmdCreatePOs.Position(68,73)
Gui.Form.cmdCreatePOs.Caption("Create POs")
Gui.Form.cmdCreatePOs.FontName("Tahoma")
Gui.Form.cmdCreatePOs.FontSize(8.25)
Gui.Form.cmdCreatePOs.Parent("frame1")
Gui.Form.cmdCreatePOs.ToolTip("PO's grouped by vendors will be created for all dashboard lines that have an AVL, vendor, cost, and PO qty filled out.")
Gui.Form.cmdCreatePOs.Event(Click,cmdCreatePOs_Click)
Gui.Form.pbStatus.Create(ProgressBar)
Gui.Form.pbStatus.Visible(False)
Gui.Form.pbStatus.Size(150,18)
Gui.Form.pbStatus.Position(666,69)
Gui.Form.pbStatus.Max(100)
Gui.Form.pbStatus.DefaultValue(0)
Gui.Form.pbStatus.Anchor(9)
Gui.Form.lblProgress.Create(Label,"Label",False,25,13,0,668,50,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblProgress.BorderStyle(0)
Gui.Form.lblProgress.Anchor(9)
Gui.frmPrevEmail..Create(BaseForm)
Gui.frmPrevEmail..Caption("PO - Preview Emails")
Gui.frmPrevEmail..Size(988,375)
Gui.frmPrevEmail..MinX(988)
Gui.frmPrevEmail..MinY(375)
Gui.frmPrevEmail..Position(0,0)
Gui.frmPrevEmail..BackColor(-2147483633)
Gui.frmPrevEmail..MousePointer(0)
Gui.frmPrevEmail..Event(UnLoad,frmPrevEmail_UnLoad)
Gui.frmPrevEmail..MaxButton(False)
Gui.frmPrevEmail..MinButton(False)
Gui.frmPrevEmail..AlwaysOnTop(False)
Gui.frmPrevEmail..FontName("Tahoma")
Gui.frmPrevEmail..FontSize(8.25)
Gui.frmPrevEmail..ControlBox(True)
Gui.frmPrevEmail..Moveable(True)
Gui.frmPrevEmail..Sizeable(True)
Gui.frmPrevEmail..ShowInTaskBar(True)
Gui.frmPrevEmail..TitleBar(True)
Gui.frmPrevEmail.GsGCPrevEml.Create(GsGridControl)
Gui.frmPrevEmail.GsGCPrevEml.Size(977,327)
Gui.frmPrevEmail.GsGCPrevEml.Position(1,1)
Gui.frmPrevEmail.GsGCPrevEml.Event(RowCellClick,GsGCPrevEml_RowCellClick)
Gui.frmPrevEmail.GsGCPrevEml.Enabled(True)
Gui.frmPrevEmail.GsGCPrevEml.Visible(True)
Gui.frmPrevEmail.GsGCPrevEml.Zorder(0)
Gui.frmPrevEmail.cmdSend.Create(Button)
Gui.frmPrevEmail.cmdSend.Size(75,25)
Gui.frmPrevEmail.cmdSend.Position(903,329)
Gui.frmPrevEmail.cmdSend.Caption("Send Emails")
Gui.frmPrevEmail.cmdSend.Event(Click,cmdSend_Click)
Gui.frmPrevEmail.cmdSend.Enabled(True)
Gui.frmPrevEmail.cmdSend.Visible(True)
Gui.frmPrevEmail.cmdSend.Zorder(0)
Gui.frmPrevEmail.cmdSend.FontName("Tahoma")
Gui.frmPrevEmail.cmdSend.FontSize(8.25)
Gui.frmPrevEmail.lblStatus.Create(Label,"Sending Emails....",False,109,17,0,1,334,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPrevEmail.lblStatus.BorderStyle(0)
Gui.frmPrevEmail.pbStatus.Create(ProgressBar)
Gui.frmPrevEmail.pbStatus.Size(165,17)
Gui.frmPrevEmail.pbStatus.Position(111,330)
Gui.frmPrevEmail.pbStatus.Visible(False)
Gui.frmEmail..Create(BaseForm)
Gui.frmEmail..Size(476,565)
Gui.frmEmail..MinX(484)
Gui.frmEmail..MinY(467)
Gui.frmEmail..Position(0,0)
Gui.frmEmail..BackColor(-2147483633)
Gui.frmEmail..MousePointer(0)
Gui.frmEmail..Event(UnLoad,frmEmail_UnLoad)
Gui.frmEmail..Caption("Edit Email")
Gui.frmEmail..MaxButton(False)
Gui.frmEmail..Sizeable(False)
Gui.frmEmail..AlwaysOnTop(False)
Gui.frmEmail..FontName("Tahoma")
Gui.frmEmail..FontSize(8.25)
Gui.frmEmail..ControlBox(True)
Gui.frmEmail..MinButton(True)
Gui.frmEmail..Moveable(True)
Gui.frmEmail..ShowInTaskBar(True)
Gui.frmEmail..TitleBar(True)
Gui.frmEmail.txtBody.Create(TextboxM)
Gui.frmEmail.txtBody.Size(461,254)
Gui.frmEmail.txtBody.Position(5,154)
Gui.frmEmail.txtBody.Enabled(True)
Gui.frmEmail.txtBody.Visible(True)
Gui.frmEmail.txtBody.Zorder(0)
Gui.frmEmail.txtBody.FontName("Tahoma")
Gui.frmEmail.txtBody.FontSize(8.25)
Gui.frmEmail.txtSubject.Create(TextboxM)
Gui.frmEmail.txtSubject.Size(461,20)
Gui.frmEmail.txtSubject.Position(5,111)
Gui.frmEmail.txtSubject.Enabled(True)
Gui.frmEmail.txtSubject.Visible(True)
Gui.frmEmail.txtSubject.Zorder(0)
Gui.frmEmail.txtSubject.FontName("Tahoma")
Gui.frmEmail.txtSubject.FontSize(8.25)
Gui.frmEmail.lblBody.Create(Label,"Body:",True,28,14,0,5,139,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblBody.BorderStyle(0)
Gui.frmEmail.lblSubject.Create(Label,"Subject:",True,39,14,0,5,96,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSubject.BorderStyle(0)
Gui.frmEmail.txtSName.Create(TextBox,"",True,225,20,0,5,24,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtSName.MaxLength(30)
Gui.frmEmail.txtRName.Create(TextBox,"",True,225,20,0,5,65,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtRName.MaxLength(30)
Gui.frmEmail.txtSEmail.Create(TextBox,"",True,225,20,0,238,24,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtSEmail.MaxLength(100)
Gui.frmEmail.txtREmail.Create(TextBox,"",True,225,20,0,238,65,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtREmail.MaxLength(100)
Gui.frmEmail.lblSName.Create(Label,"Sender Name:",True,80,14,0,3,9,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSName.BorderStyle(0)
Gui.frmEmail.lblSEmail.Create(Label,"Sender Email:",True,80,14,0,236,9,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSEmail.BorderStyle(0)
Gui.frmEmail.lblREmail.Create(Label,"Recipient Email:",True,87,14,0,236,50,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblREmail.BorderStyle(0)
Gui.frmEmail.lblRName.Create(Label,"Recipient Name:",True,90,14,0,3,50,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblRName.BorderStyle(0)
Gui.frmEmail.cmdSave.Create(Button)
Gui.frmEmail.cmdSave.Size(57,22)
Gui.frmEmail.cmdSave.Position(5,520)
Gui.frmEmail.cmdSave.Caption("Save")
Gui.frmEmail.cmdSave.Event(Click,cmdSavePreview_Click)
Gui.frmEmail.cmdSave.Enabled(True)
Gui.frmEmail.cmdSave.Visible(True)
Gui.frmEmail.cmdSave.Zorder(0)
Gui.frmEmail.cmdSave.FontName("Tahoma")
Gui.frmEmail.cmdSave.FontSize(8.25)
Gui.frmEmail.txtRow.Create(TextBox,"",False,22,20,0,444,521,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtAttach.Create(TextboxM)
Gui.frmEmail.txtAttach.Size(461,86)
Gui.frmEmail.txtAttach.Position(5,431)
Gui.frmEmail.txtAttach.Enabled(True)
Gui.frmEmail.txtAttach.Visible(True)
Gui.frmEmail.txtAttach.Zorder(0)
Gui.frmEmail.txtAttach.FontName("Tahoma")
Gui.frmEmail.txtAttach.FontSize(8.25)
Gui.frmEmail.lblActtach.Create(Label,"Attachment(s):",True,72,14,0,5,416,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblActtach.BorderStyle(0)
Gui.frmEmail.txtDropFiles.Create(TextBox,"Drop Files Here",True,95,20,0,85,410,True,2,"Arial",8,11119017,1)
Gui.frmEmail.txtDropFiles.FontStyle(True,False,False,False,False)
Gui.frmEmail.txtDropFiles.Locked(True)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("UPLPUROR.lib")
Program.Sub.Preflight.End

Program.Sub.Main.Start
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	
	f.ODBC.Connection!con.OpenCompanyConnection
	
	Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
	
	F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
	F.Intrinsic.String.Build("{0}\GAB\GAS\GAB_GSS_Logo_Green_Dash.png",V.Caller.PluginsDir,V.Local.sGssLogo)
	gui.Form..Icon(v.Local.sIcon)
	gui.Form.picGssLogo.Picture(v.Local.sGssLogo)
		
	f.Intrinsic.Control.CallSub(GetCompanyShipTo)
	f.Intrinsic.Control.CallSub(GetVendors)
	f.Intrinsic.Control.CallSub(LoadEmpties)
	f.Intrinsic.Control.CallSub(loadGridProperties)
	f.Intrinsic.Control.CallSub(LoadDropDowns)
	F.Intrinsic.Control.CallSub(CheckCostOpt)
	F.Intrinsic.Control.CallSub(CheckPOOpt)
	F.Intrinsic.Control.CallSub(CheckEmailOpt)
	gui.Form..Show
Program.Sub.Main.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Closes ODBC connection, default to connection : "con"
f.Intrinsic.Control.If(v.ODBC!con.State, =, 1)
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.EndIf

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_5733_Purch_Dash.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.Form_UnLoad.Start
	f.Intrinsic.Control.If(v.ODBC!con.State, =, 1)
		f.ODBC.Connection!con.Close
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End
Program.Sub.Form_UnLoad.End

Program.Sub.Form_Resize.Start
	'When the form is resized, manually set the size of the grids
	f.Intrinsic.Control.Try
		v.Local.fRemainingSpace.Declare(float)
		v.Local.fRemainingSpacePerc.Declare(float)
		v.Local.fHLSFrameWidth.Declare(float)
		v.Local.fHLSFrameXPos.Declare(float)
		v.Local.fAVLFrameWidth.Declare(float)
		V.Local.iX.Declare(Long)
		v.Local.iFrameWidth.Declare(Long)
		
		v.Local.fFrameYPos.Declare(Float)
		
		'Set the Y position of the frames
		f.Intrinsic.Math.Sub(v.Screen.Form.height,v.Screen.Form!frmAVL.Height,v.Local.fFrameYPos)
		'Account for space between controls' Y pos
		F.Intrinsic.Math.SUB(V.Local.fFrameYPos,33,V.Local.fFrameYPos)
		
		V.Local.fAVLFrameWidth.Set(V.Screen.Form!frmAVL.Width)
		'Subtract the static widths out of the screen width (0 at the left, 508 for AVL frame, 7 between AVL and PO HIST frames)
		f.Intrinsic.Math.Sub(v.Screen.Form.Width,7,v.Local.fRemainingSpace)
		'Subtract the spaces out of the screen height (120 at top, 45 between each frame (x3), and 600 remaining)
		'f.Intrinsic.Math.Sub(v.Screen.Form.Height,855,v.Local.fRemainingSpace)
		
		'Get the % of the remaining space to the original screen height
		f.Intrinsic.Math.Div(v.Local.fRemainingSpace,v.Screen.Form.width,v.Local.fRemainingSpacePerc)
		
		'Set the percentages of the frames.  The remaining 3 frames are each one third of the space.
		f.Intrinsic.Math.Mult(v.Screen.Form.width,v.Local.fRemainingSpacePerc,v.Local.fHLSFrameWidth)
		f.Intrinsic.Math.Mult(v.Local.fHLSFrameWidth,0.5,v.Local.fHLSFrameWidth)
		
		'Set the size of the frames
		gui.Form.frmAVL.Size(v.Local.fHLSFrameWidth, v.Screen.Form!frmAVL.Height)
		gui.Form.FormHist.Size(v.Local.fHLSFrameWidth,v.Screen.Form!FormHist.Height)
				
		'Set the position of the frames.  First frame starts at 0, 7 in between first and second frames
		f.Intrinsic.Math.Add(7,v.Local.fHLSFrameWidth,v.Local.fHLSFrameXPos)
		gui.Form.FormHist.Position(v.Local.fHLSFrameXPos,v.Local.fFrameYPos)
		gui.Form.frmAVL.Position(0,v.Local.fFrameYPos)
		
		'Set position for the logo
		F.Intrinsic.Math.Div(V.Screen.Form.Width,2,V.Local.iX)
		F.Intrinsic.Math.Div(V.Screen.Form!picGssLogo.Width,2,V.Local.iFrameWidth)
		F.Intrinsic.Math.Sub(V.Local.iX,v.Local.iFrameWidth,V.Local.iX)
		Gui.Form.picGSSLogo.Position(V.Local.iX,18)
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.Form_Resize.End

Program.Sub.LoadEmpties.Start
f.Intrinsic.Control.Try
	'Create the main displayed DT & DV
	f.Data.DataTable.Create("dtDisplay", true)
	f.Data.DataTable.AddColumn("dtDisplay", "Selected", "Boolean", False)
'	f.Data.DataTable.AddColumn("dtDisplay", "Status", "Boolean", False)
	f.Data.Datatable.AddColumn("dtDisplay", "Part", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Loc", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Description", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Source", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Parent", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "ParentDesc", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Vendor", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "MFG", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "MPN", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "PL", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "Buyer", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "LeadTime", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "OrderQty", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "UM", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "JobSufSeq", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "ReqDate", "date")
	f.Data.Datatable.AddColumn("dtDisplay", "RunScrap", "float")
	f.Data.Datatable.AddColumn("dtDisplay", "QtyReq", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "QtyOHAppr", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "QtyOHNonAppr", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "QtyOnPOAppr", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "QtyOnPONonAppr", "Float")
	f.Data.Datatable.AddColumn("dtDisplay", "PODueDate", "date")
	f.Data.Datatable.AddColumn("dtDisplay", "InvCost", "float")
	f.Data.Datatable.AddColumn("dtDisplay", "POCost", "float")
	f.Data.Datatable.AddColumn("dtDisplay", "POQty", "float")
	f.Data.Datatable.AddColumn("dtDisplay", "Notes", "string")
	f.Data.Datatable.AddColumn("dtDisplay", "UM_Purch", "String")
	f.Data.Datatable.AddColumn("dtDisplay", "UM_Conversion", "String")	
	F.Data.DataTable.AddExpressionColumn("dtdisplay","Status","boolean","iif(MFG<>'' and mpn<>'' and Vendor<>'',True,False)")
	f.Data.DataView.Create("dtDisplay", "dvDisplay", 22)
	
	'Create the AVL DT & DV
	f.Data.DataTable.Create("dtAVL",True)
	f.Data.DataTable.AddColumn("dtAVL","Selected","boolean",False)
	f.Data.DataTable.AddColumn("dtAVL","GSSPart","String")
	f.Data.DataTable.AddColumn("dtAVL","Mfg","String")
	f.Data.DataTable.AddColumn("dtAVL","MPN","String")
	f.Data.DataTable.AddColumn("dtAVL","QtyOnHand","float")
	f.Data.DataTable.AddColumn("dtAVL","Pref","string")
	f.Data.DataView.Create("dtAVL","dvAVL",22)
	
	'Create the PO Hist DT & DV
	f.Data.DataTable.Create("dtPOHist",True)
	f.Data.DataTable.AddColumn("dtPOHist","Part","String")
	f.Data.DataTable.AddColumn("dtPOHist","MfgPart","String")
	f.Data.DataTable.AddColumn("dtPOHist","MfgName","String")
	f.Data.DataTable.AddColumn("dtPOHist","Vendor","String")
	f.Data.DataTable.AddColumn("dtPOHist","PO","String")
	f.Data.DataTable.AddColumn("dtPOHist","Line","String")
	f.Data.DataTable.AddColumn("dtPOHist","PODate","date")
	f.Data.DataTable.AddColumn("dtPOHist","Qty","float")
	f.Data.DataTable.AddColumn("dtPOHist","Cost","float")
	f.Data.DataTable.AddColumn("dtPOHist","OpenCode","string")
	f.Data.DataView.Create("dtPOHist","dvPOHist",22)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.LoadEmpties.End

Program.Sub.loadGridProperties.Start
v.Local.iCnt.Declare
v.Local.sFields.Declare
v.Local.iVisibleIndex.Declare
v.Local.sVendors.Declare(String)

f.Intrinsic.Control.Try
	'Set the properties for the display GV
	gui.Form.GsGcDisplay.AddGridviewFromDataview("gvDisplay", "dtDisplay", "dvDisplay")
	f.Intrinsic.String.Split(v.DataTable.dtDisplay.FieldNames, "*!*", v.Local.sFields)
	'	Set the column property for all columns except the very first one, which is Selected.
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Center")
		gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Center")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	'	Set col properties for Selected column
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Selected", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Selected", "AllowEdit", True)

	'	Set col properties for Vendor column
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Vendor", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Vendor", "AllowEdit", True)
	'	Set Vendor dropdown in grid
	f.Data.Dataview.ToString("dtVendorName","dvVendorName","Vendor","","*!*",v.Local.sVendors)
	gui.Form.GsGcDisplay.ColumnEdit("gvDisplay","Vendor","Combobox",v.Local.sVendors)
	
	'	Set col properties for the Status column
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Status", "Visible", False)
	
	'	Last two columns are invisible
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "UM_Purch", "Visible", False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "UM_Conversion", "Visible", False)

	'	Set column widths
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Selected","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Part","Width",150)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Loc","Width",50)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","description","Width",250)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","source","Width",100)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Parent","Width",150)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","parentdesc","Width",250)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","vendor","Width",200)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","MFG","Width",150)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","MPN","Width",150)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","PL","Width",50)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Buyer","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","LeadTime","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","OrderQty","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","UM","Width",50)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","jobsufseq","Width",150)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","ReqDate","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","runscrap","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","qtyreq","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","QtyOHAppr","Width",100)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","QtyOHNonAppr","Width",100)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","QtyOnPOAppr","Width",100)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","QtyOnPONonAppr","Width",100)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","poduedate","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","InvCost","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","POCost","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","POQty","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","Notes","Width",250)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","UM_Purch","Width",75)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","UM_Conversion","Width",75)
	
	'	Set custom date format columns
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","ReqDate","DisplayCustomDatetime","d")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay","poduedate","DisplayCustomDatetime","d")
	
	'	Set edit properties and back color for editable columns
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Vendor", v.Enum.ColumnPropertyNames!CellBackColor,"LightYellow")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POCost", v.Enum.ColumnPropertyNames!CellBackColor,"LightYellow")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POQty", v.Enum.ColumnPropertyNames!CellBackColor,"LightYellow")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "poduedate", v.Enum.ColumnPropertyNames!CellBackColor,"LightYellow")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Notes", v.Enum.ColumnPropertyNames!CellBackColor,"LightYellow")
	
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Part", v.Enum.ColumnPropertyNames!CellForeColor,"Blue")
	
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POCost", v.Enum.ColumnPropertyNames!ReadOnly,False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POQty", v.Enum.ColumnPropertyNames!ReadOnly,False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "poduedate", v.Enum.ColumnPropertyNames!ReadOnly,False)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Notes", v.Enum.ColumnPropertyNames!ReadOnly,False)
	
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POCost", v.Enum.ColumnPropertyNames!AllowEdit,True)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POQty", v.Enum.ColumnPropertyNames!AllowEdit,True)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "poduedate", v.Enum.ColumnPropertyNames!AllowEdit,True)
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "Notes", v.Enum.ColumnPropertyNames!AllowEdit,True)
	
	'	Set monetary column formatting
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "POCost", v.Enum.ColumnPropertyNames!DisplayCustomNumeric,"$##,###,###.00")
	gui.Form.GsGcDisplay.SetColumnProperty("gvDisplay", "InvCost", v.Enum.ColumnPropertyNames!DisplayCustomNumeric,"$##,###,###.0000")
	
	'	Conditional formatting
	gui.Form.GsGcDisplay.AddStyleFormatCondition("gvDisplay","Status","StatusOK","Equal",1)
	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("gvDisplay","Status","StatusOK",v.Enum.ConditionalPropertyNames!FontBold,True)
	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("gvDisplay","Status","StatusOK",v.Enum.ConditionalPropertyNames!BackColor,"LightGreen")
	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("gvDisplay","Status","StatusOK",v.Enum.ConditionalPropertyNames!ApplyToRow,True)
	
	'	gvDisplay Properties
	gui.Form.GsGcDisplay.BestFitColumns("gvDisplay")
	gui.Form.GsGcDisplay.SetGridviewProperty("gvDisplay","Showgrouppanel", True)
	Gui.Form.GsGcDisplay.SetGridViewProperty("gvDisplay","MultiSelect",True)
	Gui.Form.GsGcDisplay.SetGridViewProperty("gvDisplay","AllowSort",True)
	Gui.Form.GsGcDisplay.SetGridViewProperty("gvDisplay","AllowFilter",True)
	Gui.Form.GsGcDisplay.SetGridViewProperty("gvDisplay","OptionsDetailShowDetailTabs",False)
	Gui.Form.GsGcDisplay.SetGridViewProperty("gvDisplay","OptionsViewShowGroupPanel",True)
	Gui.Form.GsGcDisplay.SetGridviewProperty("gvDisplay","OptionsFilterUseNewCustomFilterDialog",True)
	Gui.Form.GsGcDisplay.SetGridviewProperty("gvDisplay","OptionsViewColumnAutoWidth",False)

	'Set the properties for the AVL GV
	gui.Form.GsGcAVL.AddGridviewFromDataview("gvAVL", "dtAVL", "dvAVL")
	v.Local.sFields.Redim(0,0)
	v.Local.iCnt.Set(0)
	f.Intrinsic.String.Split(v.DataTable.dtAVL.FieldNames, "*!*", v.Local.sFields)
	'	Set the column property for all columns except the very first one, which is Selected.
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Center")
		gui.Form.GsGcAVL.SetColumnProperty("gvAVL", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Center")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'	Set col properties for Selected column
	gui.Form.GsGcAVL.SetColumnProperty("gvAVL", "Selected", "ReadOnly", False)
	gui.Form.GsGcAVL.SetColumnProperty("gvAVL", "Selected", "AllowEdit", True)
	
	'Set the properties for the PO Hist GV
	gui.Form.GsGcPOHistory.AddGridviewFromDatatable("gvPOHist","dtPOHist")
	v.Local.sFields.Redim(0,0)
	v.Local.iCnt.Set(0)
	f.Intrinsic.String.Split(v.DataTable.dtPOHist.FieldNames, "*!*", v.Local.sFields)
	'	Set the column property for all columns except the very first one, which is Selected.
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Center")
		gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Center")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'	Hide OpenCode
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", "OpenCode", "Visible", False)
	
	'	Set column widths
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist","MfgPart","Width",100)
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist","MfgName","Width",100)
	
	'Custom money and date formatting
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist","PODate","DisplayCustomDatetime","d")
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", "Cost", v.Enum.ColumnPropertyNames!DisplayCustomNumeric,"$##,###,###.00")
	
	'Hyperlink for PO
	gui.Form.GsGcPOHistory.SetColumnProperty("gvPOHist", "PO", v.Enum.ColumnPropertyNames!CellForeColor,"Blue")

	'Display the GVs
	gui.Form.GsGcDisplay.MainView("gvDisplay")
	gui.Form.GsGcAVL.MainView("gvAVL")
	gui.Form.GsGcPOHistory.MainView("gvPOHist")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadGridProperties.End

Program.Sub.chkWOCutoffDate_Change.Start
	gui.Form.dtpCutoffDate.Enabled(v.Screen.Form!chkCutoff.CheckedAsBoolean)
Program.Sub.chkWOCutoffDate_Change.End

Program.Sub.LoadDropDowns.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.BlockEvents

	'Cost
	Gui.Form.ddlCost.AddItem("PO History Cost",0)
	Gui.Form.ddlCost.AddItem("Vendor Quote Cost",1)
	Gui.Form.ddlCost.AddItem("Std Cost",2)
	Gui.Form.ddlCost.AddItem("Zero Cost",3)
	Gui.Form.ddlCost.Text("PO History Cost")
	'POs
	Gui.Form.ddlPOs.AddItem("Group POs by Vendor",0)
	'Gui.Form.ddlPOs.AddItem("Individual POs",1)
	Gui.Form.ddlPOs.Text("Group POs by Vendor")
	'Email
	Gui.Form.ddlEmail.AddItem("Do Not Email",0)
	Gui.Form.ddlEmail.AddItem("Auto Email",1)
	Gui.Form.ddlEmail.AddItem("Preview Email",2)
	Gui.Form.ddlEmail.Text("Preview Email")
	
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.LoadDropDowns.End

Program.Sub.GetCompanyShipTo.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Data.DataTable.CreateFromSQL("dtCompany","con","Select NAME_COMPANY, ADDRESS1, ADDRESS2, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION From V_COMPANY;",True)

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.GetCompanyShipTo.End

'***Options check/save to be retrieved the next time openning dashboard
Program.Sub.CheckCostOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,2000,5,"",V.Local.sRet)
	Gui.form.ddlCost.Text(V.Local.sRet)
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.CheckCostOpt.End
Program.Sub.SaveCostOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,2000,False,V.Screen.form!ddlCost.Text,False,0,-999.0,1/1/1980,12:00:00 AM)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.SaveCostOpt.End
Program.Sub.CheckPOOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,3000,5,"",V.Local.sRet)
	Gui.form.ddlPOs.Text(V.Local.sRet)
	
	F.Intrinsic.Control.If(V.Local.sRet,=,"Individual POs")
		Gui.form.ddlEmail.Enabled(False)
		Gui.form.ddlEmail.Text("Do Not Email")
	F.Intrinsic.Control.Else
		Gui.form.ddlEmail.Enabled(True)
		F.Intrinsic.Control.CallSub(CheckEmailOpt)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.CheckPOOpt.End
Program.Sub.SavePOOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,3000,False,V.Screen.form!ddlPOs.Text,False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.CallSub(CheckPOOpt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.SavePOOpt.End
Program.Sub.CheckEmailOpt.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,4000,5,"",V.Local.sRet)
	Gui.frmPO.ddlEmail.Text(V.Local.sRet)
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndTry
Program.Sub.CheckEmailOpt.End
Program.Sub.SaveEmailOpt.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5733,4000,False,V.Screen.form!ddlEmail.Text,False,0,-999.0,1/1/1980,12:00:00 AM)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndTry
Program.Sub.SaveEmailOpt.End

Program.Sub.GetAVLs.Start
	v.Local.sSQL.Declare(String)
	f.Intrinsic.Control.Try
		'Get a list of AVLs tied to the part selected
		f.Intrinsic.String.Build("select convert(0,sql_bit) as Selected, rtrim(a.part) as GSSPart, ltrim(rtrim(a.mfg_part)) as MPN, ltrim(rtrim(a.mfg_name)) as MFG, sum(b.quantity) as QtyOnHand, '' as pref from v_inv_cross_ref a left join v_item_master b on a.part=b.part and ltrim(rtrim(a.mfg_part))=ltrim(rtrim(b.serial_number)) and ltrim(rtrim(a.mfg_name))=ltrim(rtrim(b.heat)) where rtrim(a.part)='{0}' group by a.part, a.mfg_part, a.mfg_name;",v.DataTable.dtDisplay(v.Args.rowind).Part!FieldVal,v.Local.sSQL)
		f.Data.DataTable.CreateFromSQL("dtInvXref","con",v.Local.sSQL)
		'Add expression column to assist with the dictionary fill
		f.Data.DataTable.AddExpressionColumn("dtInvXref","PMfg","string","GSSPart+MPN+MFG")
		'Fill in the preferred part
		f.Intrinsic.String.Build("select part+mfg_part+mfg_name, preferred from v_bom_xref where rtrim(part)='{0}' and mfg_part='{1}' and mfg_name='{2}' and parent='{3}';",v.DataTable.dtDisplay(v.Args.rowind).Part!FieldVal,v.DataTable.dtDisplay(v.Args.rowind).MPN!FieldVal,v.DataTable.dtDisplay(v.Args.rowind).Mfg!FieldVal,v.DataTable.dtDisplay(v.Args.rowind).Parent!FieldVal,v.Local.sSQL)
		f.Data.Dictionary.CreateFromSQL("dictPref","con",v.Local.sSQL)
		f.Data.Dictionary.SetDefaultReturn("dictPref","")
		f.Data.DataTable.FillFromDictionary("dtInvXref","dictPref","PMfg","pref")
		f.Data.Dictionary.Close("dictPref")
		'Fill merge the new data with the existing datatable.
		f.Data.DataTable.DeleteRow("dtAVL")
		f.Data.DataTable.AcceptChanges("dtAVL")
		f.Data.DataTable.Merge("dtInvXref","dtAVL",False,2)
		f.Data.DataTable.Close("dtInvXref")
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GetAVLs.End

Program.Sub.GetPOHist.Start
	v.Local.sSQL.Declare(String)
	f.Intrinsic.Control.Try
		'Pull PO history from open PO lines and PO lines moved to history
		f.Intrinsic.String.Build("select rtrim(replace(a.part,'*','')) as Part, rtrim(a.part_mfg_no) as MfgPart, rtrim(a.mfg_name) as MfgName, a.purchase_order as PO, a.record_no as Line, a.date_due_line as PODate, a.qty_order as Qty, a.cost, 'V' as OpenCode, b.name_vendor as Vendor from v_po_lines a inner join v_vendor_master b on a.vendor=b.vendor where rtrim(replace(a.part,'*','')) = '{0}' union all select rtrim(replace(a.part,'*','')) as Part, a.part_mfg_no as MfgPart,a.mfg_name as MfgName, a.purchase_order as PO, a.Line, a.date_due_line as PODate, a.qty_order as Qty, a.cost, 'H' as OpenCode, b.name_vendor as Vendor from v_pohist_lines a inner join v_vendor_master b on a.vendor=b.vendor where rtrim(replace(a.part,'*','')) = '{0}' order by a.date_due_line desc",v.DataTable.dtDisplay(v.Args.rowind).Part!FieldVal,v.Local.sSQL)
		f.Data.DataTable.CreateFromSQL("dtPOHistTemp","con",v.Local.sSQL)
		'Merge will the visible datatable
		f.Data.DataTable.DeleteRow("dtPOHist")
		f.Data.DataTable.AcceptChanges("dtPOHist")
		f.Data.DataTable.Merge("dtPOHistTemp","dtPOHist",False,2)
		f.Data.DataTable.Close("dtPOHistTemp")
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GetPOHist.End

Program.Sub.GetVendors.Start
	'Used to load the dropdown in the Vendor column in dtDisplay
	F.Intrinsic.Control.Try
		V.Local.sError.Declare
		
		F.Data.datatable.CreateFromSQL("dtVendorName","con","Select RTrim(name_Vendor) As Vendor, name_vendor From V_Vendor_Master Where Vendor <> '' Order By Vendor;",True)
		f.Data.DataView.Create("dtVendorName","dvVendorName",22)
		f.Data.Dictionary.createfromdatatable("dictVendorName","dtVendorName","Vendor","name_vendor",2)

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.GetVendors.End

Program.Sub.GsGcDisplay_RowCellClick.Start
	v.Local.sPart.Declare(String)
	v.Local.sParams.Declare(String)
	v.Local.bEdit.Declare(Boolean)
	
	f.Intrinsic.Control.Try
		f.Intrinsic.Control.SelectCase(v.Args.column)
			f.Intrinsic.Control.Case("Part")
				Gui.Form.GsGcDisplay.GetCellValueByColumnName("gvDisplay",V.ARGS.COLUMN,V.Args.RowIndex,V.Local.sPart)
				'Check user security to S&D w/ Edit (menu key 371).  If false, open general S&D.
				F.Global.Security.CheckUserAccessIPM(371,1,V.Local.bEdit)
				f.Intrinsic.Control.If(v.Local.bEdit)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,"",V.Local.sParams)
				f.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,"",V.Local.sParams)
				f.Intrinsic.Control.EndIf
				
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.CaseElse
				'Get the AVL's for the selected part
				f.Intrinsic.Control.CallSub(GetAVLs,"RowInd",v.Args.rowindex)
				'Get the PO history for the part
				f.Intrinsic.Control.CallSub(GetPOHist,"RowInd",v.Args.rowindex)
		f.Intrinsic.Control.EndSelect
			
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GsGcDisplay_RowCellClick.End

Program.Sub.GsGcAVL_CellValueChanged.Start
	v.Local.sFilter.Declare(String)
	v.Local.sRet.Declare(String)
	v.Local.iMfgPartColIndex.Declare(Long)
	v.Local.iMfgNameColIndex.Declare(Long)
	f.Intrinsic.Control.Try
		'If Selected is changed, write the mfg part and mfg name to the current row in the datatable
		f.Intrinsic.Control.If(v.Args.column,=,"Selected")
			'Reset the Selected value for all rows
			f.Data.DataTable.SetValue("dtAVL",-1,"Selected",0)
			'Set the selected value
			f.Data.DataTable.SetValue("dtAVL",v.Args.rowindex,"Selected",1)
			'Write the Mfg Part and Name back to the dtDisplay
			gui.Form.GsGcDisplay.GetSelectedRows("gvDisplay",v.Local.sRet)
			f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			gui.Form.GsGcDisplay.GetColumnIndexByName("gvDisplay","Mfg",v.Local.iMfgNameColIndex)
			gui.Form.GsGcDisplay.GetColumnIndexByName("gvDisplay","MPN",v.Local.iMfgPartColIndex)
			gui.Form.GsGcDisplay.SetCellValue("gvDisplay",v.Local.iMfgNameColIndex,v.Local.sRet(0),v.DataTable.dtAVL(v.Args.rowindex).Mfg!FieldVal)
			gui.Form.GsGcDisplay.SetCellValue("gvDisplay",v.Local.iMfgPartColIndex,v.Local.sRet(0),v.DataTable.dtAVL(v.Args.rowindex).MPN!FieldVal)
			'Set the cost
			f.Intrinsic.Control.CallSub(LoadCost,"RowInd",v.Local.sRet(0))
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GsGcAVL_CellValueChanged.End

Program.Sub.LoadCost.Start
	'Depending on the cost option chosen, get the cost for the vendor chosen
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCallType.Declare
	V.Local.iCnt.Declare
	V.Local.iReturnCode.Declare
	V.Local.fReturnCost.Declare
	V.Local.sReturnVendor.Declare
	V.Local.sVendor.Declare
	v.Local.sSQL.Declare(String)
	
	F.Intrinsic.Control.If(V.Screen.Form!ddlCost.Text,=,"Zero Cost")
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.SelectCase(v.Screen.Form!ddlCost.Text)
		f.Intrinsic.Control.Case("PO History Cost")
			'Find the last cost for the selected part, mfg part, and mfg name
			f.Intrinsic.String.Build("Part='{0}' and MfgPart='{1}' and MfgName='{2}'",v.DataTable.dtDisplay(v.Args.rowind).Part!FieldVal,v.DataTable.dtDisplay(v.Args.rowind).MPN!FieldVal,v.DataTable.dtDisplay(v.Args.rowind).MFG!FieldVal,v.Local.sSQL)
			'Use the filter on dvPOHist
			f.Data.DataView.SetFilter("dtPOHist","dvPOHist",v.Local.sSQL)
			f.Data.DataView.SetSort("dtPOHist","dvPOHist","PODate desc")
			f.Intrinsic.Control.If(v.DataView.dtPOHist!dvPOHist.RowCount,>,0)
				f.Data.DataTable.SetValue("dtdisplay",v.Args.rowind,"POCost",v.DataView.dtPOHist!dvPOHist(0).Cost!FieldValFloat)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Case("Vendor Quote Cost")
			f.Intrinsic.String.Build("select TOP 1 B.UNIT_PRICE from V_VEND_QTE_HEADER a inner join V_VEND_QTE_LINES b on a.part=b.part and a.seq=b.seq where rtrim(A.part)='{0}' AND A.VENDOR='{1}' AND A.MFG_PART_NO='{2}' AND A.MFG_NAME='{3}' AND B.QUANTITY <= {4} ORDER BY B.QUANTITY DESC;",V.DataTable.dtDisplay(V.Args.ROWIND).Part!FieldVal,V.DataTable.dtDisplay(V.Args.ROWIND).Vendor!FieldVal,V.DataTable.dtDisplay(V.Args.ROWIND).MPN!FieldVal,V.DataTable.dtDisplay(V.Args.ROWIND).MFG!FieldVal,V.DataTable.dtDisplay(V.Args.ROWIND).POQty!FieldVal,v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.fReturnCost)
			f.Data.DataTable.SetValue("dtdisplay",v.Args.rowind,"POCost",v.Local.fReturnCost)
		f.Intrinsic.Control.Case("Std Cost")
			f.Data.DataTable.SetValue("dtdisplay",v.Args.rowind,"POCost",v.DataTable.dtDisplay(v.Args.rowind).InvCost!FieldValFloat)
	f.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.LoadCost.End

Program.Sub.InvCheck.Start
	'Get the part statistics
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtInvCheck.Exists)
		F.Data.DataTable.Close("dtInvCheck")
	F.Intrinsic.Control.EndIf
	
	'Feedback for user
	Gui.Form.lblStatus.Caption("Refreshing inventory attributes....")
	
	'Get all inventory parts that are to be purchased
	F.Data.DataTable.CreateFromSQL("dtInvCheck","con","SELECT rtrim(PART) as Part,location,part+location as PMast,rtrim(DESCRIPTION) as DESCRIPTION,PRODUCT_LINE,rtrim(CODE_SORT) as code_sort,TIME_MATERIAL_LEAD,QTY_ORDER,convert(0,sql_float) as QTY_ONHANDAPPR,convert(0,sql_float) AS QTY_ONHANDNONAPPR, convert(0,sql_float) AS QTY_ONPOAPPR, convert(0,sql_float) AS QTY_ONPONONAPPR,QTY_REORDER,UM_INVENTORY,UM_PURCHASING,FACTOR_CONVERSION,amt_cost FROM V_INVENTORY_ALL WHERE CODE_SOURCE IN ('P','J') OR TEMP_PURCH='Y' ORDER BY PART;",True)
	gui.Form.pbStatus.Value(10)
	
	'Get the on hand approved qtys by AVL
	f.Data.dictionary.CreateFromSQL("dictAVLOnHand","con","select a.part, isnull(sum(b.qty_available_ship),0) as QtyOnHand from v_inv_cross_ref a left join v_item_master b on a.part=b.part and ltrim(rtrim(a.mfg_part))=ltrim(rtrim(b.serial_number)) and ltrim(rtrim(a.mfg_name))=ltrim(rtrim(b.heat)) where concat(a.mfg_part,a.mfg_name) in (select concat(mfg_part,mfg_name) from v_bom_xref) group by a.part, a.mfg_part, a.mfg_name;")
	f.Data.Dictionary.SetDefaultReturn("dictAVLOnHand",0)
	f.Data.DataTable.FillFromDictionary("dtInvCheck","dictAVLOnHand","Part","QTY_ONHANDAPPR")
	f.Data.Dictionary.Close("dictAVLOnHand")
	gui.Form.pbStatus.Value(20)
	
	'Get the on hand non-approved qtys by AVL
	f.Data.dictionary.CreateFromSQL("dictAVLOnHand","con","select a.part, isnull(sum(b.qty_available_ship),0) as QtyOnHand from v_inv_cross_ref a left join v_item_master b on a.part=b.part and ltrim(rtrim(a.mfg_part))=ltrim(rtrim(b.serial_number)) and ltrim(rtrim(a.mfg_name))=ltrim(rtrim(b.heat)) where concat(a.mfg_part,a.mfg_name) not in (select concat(mfg_part,mfg_name) from v_bom_xref) group by a.part, a.mfg_part, a.mfg_name;")
	f.Data.Dictionary.SetDefaultReturn("dictAVLOnHand",0)
	f.Data.DataTable.FillFromDictionary("dtInvCheck","dictAVLOnHand","Part","QTY_ONHANDNONAPPR")
	f.Data.Dictionary.Close("dictAVLOnHand")
	gui.Form.pbStatus.Value(30)
	
	'Get the on PO approved qtys by AVL
	f.Data.dictionary.CreateFromSQL("dictAVLOnPO","con","select part, isnull(sum(qty_order-qty_received+qty_reject),0) as QtyOnPO from v_po_lines where concat(part_mfg_no,mfg_name) in (select concat(mfg_part,mfg_name) from v_bom_xref) group by part")
	f.Data.Dictionary.SetDefaultReturn("dictAVLOnPO",0)
	f.Data.DataTable.FillFromDictionary("dtInvCheck","dictAVLOnPO","Part","QTY_ONPOAPPR")
	f.Data.Dictionary.Close("dictAVLOnPO")
	gui.Form.pbStatus.Value(40)
	
	'Get the on PO non-approved qtys by AVL
	f.Data.dictionary.CreateFromSQL("dictAVLOnPO","con","select part, isnull(sum(qty_order-qty_received+qty_reject),0) as QtyOnPO from v_po_lines where concat(part_mfg_no,mfg_name) not in (select concat(mfg_part,mfg_name) from v_bom_xref) group by part")
	f.Data.Dictionary.SetDefaultReturn("dictAVLOnPO",0)
	f.Data.DataTable.FillFromDictionary("dtInvCheck","dictAVLOnPO","Part","QTY_ONPONONAPPR")
	f.Data.Dictionary.Close("dictAVLOnPO")
	gui.Form.pbStatus.Value(50)
	
	'Calculate MRP
	F.Intrinsic.Control.CallSub(LoadData)
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.InvCheck.End

Program.Sub.LoadData.Start
	v.local.sFilter.Declare(String)
	v.local.sFilter2.Declare(String)
	v.local.sFilter3.Declare(String)
	v.Local.sSQL.Declare(String)
	v.Local.dDate.Declare(Date)
	v.Local.sTemp.Declare(String)
	f.Intrinsic.Control.Try		
		'Feedback to the user
		Gui.Form.lblStatus.Caption("Calculating requirements....")
		
		'Set the filter for if the cutoff date is used
		F.Intrinsic.Control.If(V.Screen.Form!chkCutoff.checkedasboolean,=,True)
			v.Local.dDate.Set(V.screen.Form!dtpCutoffDate.Value)
			f.Intrinsic.String.Build("DATEADD(DAY,-TIME_MATERIAL_LEAD,date_due) <= '{0}'",V.local.dDate.PervasiveDate,v.Local.sFilter)
		F.Intrinsic.Control.EndIf
		'Set filter if BOM Parent is used
		F.Intrinsic.Control.If(V.Screen.Form!txtBOMParent.Text,!=,"")
			F.Intrinsic.Control.If(V.Local.sFilter,!=,"")
				F.Intrinsic.String.Build("{0} AND",V.Local.sFilter,V.Local.sFilter)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("{0} a.PART IN (SELECT PART FROM V_BOM_MSTR WHERE PARENT LIKE '%{1}%')",V.Local.sFilter,V.Screen.Form!txtBOMParent.Text,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
		'Set filter if buyer code is used
		F.Intrinsic.Control.If(V.Screen.Form!txtBuyercode.Text,!=,"")
			F.Intrinsic.Control.If(V.Local.sFilter,!=,"")
				F.Intrinsic.String.Build("{0} AND",V.Local.sFilter,V.Local.sFilter)
			F.Intrinsic.Control.EndIf
			'If multiple values where specified, remove spaces and insert single quotes around the values
			f.Intrinsic.String.Replace(v.Screen.Form!txtBuyercode.Text," ","",v.Local.sTemp)
			f.Intrinsic.String.Replace(v.Local.sTemp,",","','",v.Local.sTemp)
			F.Intrinsic.String.Build("{0} rtrim(B.code_sort) in ('{1}')",V.Local.sFilter,V.Screen.Form!txtBuyercode.Text,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.LOCAL.sFilter,!=,"")
			'JOB_COMMITMENTS uses date_due, while ORDER_LINES uses date_item_prom, and v_forecast_req uses fo_date_due and fo_part
			F.Intrinsic.String.Build("WHERE {0}",V.Local.sFilter,V.Local.sFilter)
			f.Intrinsic.String.Replace(v.Local.sFilter,"date_due","date_item_prom",v.Local.sFilter2)
			f.Intrinsic.String.Replace(v.Local.sFilter,"date_due","fo_date_due",v.Local.sFilter3)
			f.Intrinsic.String.Replace(v.Local.sFilter3,"part","fo_part",v.Local.sFilter3)
		F.Intrinsic.Control.EndIf
		
		'Create dt of requirements per part
		f.Intrinsic.String.Build("SELECT convert(0,sql_bit) as Selected, rtrim(A.PART) as Part,A.LOCATION,'Work Order' AS SOURCE,A.JOB+'-'+A.SUFFIX+'-'+A.SEQUENCE as JobSufSeq,A.QTY_COMMITTED-A.QTY_ISSUED AS QtyReq, A.DATE_DUE, dateadd(day,b.TIME_MATERIAL_LEAD,curdate()) as PODueDate, B.DESCRIPTION, '' as Vendor FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_ALL B ON A.PART = B.PART AND A.LOCATION = B.LOCATION {0} UNION SELECT convert(0,sql_bit) as Selected, A.PART,A.LOCATION,'Sales Order' AS SOURCE,ORDER_NO+'-'+LEFT(RECORD_NO,3)+'-' AS JobSufSeq,QTY_BO AS QtyReq,DATE_ITEM_PROM AS DATE_DUE, dateadd(day,TIME_MATERIAL_LEAD,curdate()) as PODueDate, B.DESCRIPTION, '' as Vendor FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION {1} UNION SELECT convert(0,sql_bit) as Selected, rtrim(A.fo_part) as Part, A.fo_locn as Location, 'Forecast' as Source,a.fo_number+'-'+a.fo_suffix+'-'+a.fo_seq as JobSufSeq, a.fo_qty_ord as QtyReq, a.fo_date_due as Date_Due, dateadd(day,b.TIME_MATERIAL_LEAD,curdate()) as PODueDate, B.DESCRIPTION, '' as Vendor from V_FORECAST_REQ a inner join V_INVENTORY_ALL B ON A.fo_PART = B.PART AND A.fo_locn = B.LOCATION {2} ORDER BY A.PART,A.LOCATION,A.DATE_DUE ASC;",v.Local.sFilter,v.Local.sFilter2,v.Local.sFilter3,v.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtJobs","con",V.Local.sSQL)
		gui.Form.pbStatus.Value(60)
		
		'Add new columns for parent part/desc, run scrap, and part xref info
		f.Data.Datatable.AddColumn("dtJobs","ParentPart","string")
		f.Data.Datatable.AddColumn("dtJobs","ParentDesc","string")
		f.Data.Datatable.AddColumn("dtJobs","MfgName","string")
		f.Data.Datatable.AddColumn("dtJobs","MfgPart","string")
		f.Data.Datatable.AddColumn("dtJobs","RunScrap","float")
		
		'Get the job header info
		f.Data.DataTable.Createfromsql("dtJobHeader","con","select rtrim(b.part) as ParentPart, rtrim(b.description) as Description, a.job+'-'+a.suffix+'-'+a.seq as JSS from v_job_operations a inner join v_job_header b on a.job=b.job and a.suffix=b.suffix where a.lmo='M' and a.seq<995000;")
		f.Data.Dictionary.createfromdatatable("dictParent","dtJobHeader","JSS","ParentPart")
		f.Data.Dictionary.SetDefaultReturn("dictParent","")
		f.Data.DataTable.FillFromDictionary("dtJobs","dictParent","JobSufSeq","ParentPart")
		f.Data.Dictionary.Close("dictParent")
		f.Data.Dictionary.createfromdatatable("dictParentDesc","dtJobHeader","JSS","description")
		f.Data.Dictionary.SetDefaultReturn("dictParentDesc","")
		f.Data.DataTable.FillFromDictionary("dtJobs","dictParentDesc","JobSufSeq","ParentDesc")
		f.Data.Dictionary.Close("dictParentDesc")
		f.Data.DataTable.close("dtJobHeader")
		gui.Form.pbStatus.Value(70)
		
		'Get run scrap %
		f.Data.Dictionary.Createfromsql("dictRunScrap","con","select bom_parent, if(isnull(run_scrap,'')='',0,convert(run_scrap,sql_float)) as run_scrap from gcg_5786_bom_edit;")
		f.Data.Dictionary.SetDefaultReturn("dictRunScrap",0)
		f.Data.DataTable.FillFromDictionary("dtJobs","dictRunScrap","ParentPart","RunScrap")
		f.Data.Dictionary.Close("dictRunScrap")
		
		'Linq join this datatable with the inventory one to see the entire dashboard contents at once
		f.Data.Linq.Join(v.Enum.LinqJoinType!InnerJoin,v.Enum.LinqSourceType!DataTable,"dtJobs*!*a",v.Enum.LinqSourceType!DataTable,"dtInvCheck*!*b","a.part=b.part","a.selected*!*a.part*!*a.location as Loc*!*a.description*!*a.source*!*a.parentpart as Parent*!*a.parentdesc*!*a.vendor*!*a.mfgname as MFG*!*a.mfgpart as MPN*!*b.product_line as PL*!*b.code_sort as Buyer*!*b.time_Material_lead as LeadTime*!*b.qty_order as OrderQty*!*b.um_inventory as UM*!*a.jobsufseq*!*a.date_due as ReqDate*!*a.runscrap*!*a.qtyreq*!*b.qty_onhandappr as QtyOHAppr*!*b.qty_onhandnonappr as QtyOHNonAppr*!*b.qty_onpoappr as QtyOnPOAppr*!*b.qty_onpononappr as QtyOnPONonAppr*!*a.poduedate*!*b.qty_reorder*!*b.um_purchasing as UM_Purch*!*b.factor_conversion as UM_Conversion*!*b.amt_cost as InvCost","","","a.part,a.location","dtMRP",True)
		gui.Form.pbStatus.Value(90)
		
		'Add new columns to hold PO qty and notes
		f.Data.Datatable.AddColumn("dtMRP","Notes","string")
		f.Data.Datatable.AddColumn("dtMRP","POCost","float")
		
		'Calculate the current on hand qtys
		F.Data.DataTable.AddExpressionColumn("dtMRP","CurOnHand",Float,"QtyOHAppr+QtyOnPOAppr")
		F.Data.DataTable.AddExpressionColumn("dtMRP","Balance",Float,"CurOnHand-qtyreq-QTY_REORDER")
		'Since Balance is negative, flip the sign for the qty to be ordered
		F.Data.DataTable.AddExpressionColumn("dtMRP","POQty",Float,"Balance*-1")
		
		F.Data.DataView.Create("dtMRP","dvMRP",22,"Balance < 0","PART,loc ASC")
		f.Data.Dataview.ToDataTable("dtMRP","dvMRP","dtTemp")
		
		'Merge with the master dt
		f.Data.DataTable.DeleteRow("dtdisplay")
		f.Data.DataTable.AcceptChanges("dtdisplay")
		f.Data.DataTable.Merge("dtTemp","dtDisplay",False,2)
		gui.Form.pbStatus.Value(100)
		
		'Clean up dts and dvs
		f.Data.DataView.Close("dtMRP","dvMRP")
		f.Data.DataTable.Close("dtTemp")
		f.Data.DataTable.Close("dtMRP")
		f.Data.DataTable.Close("dtJobs")
		
		'Hide feedback from user
		Gui.Form.lblStatus.Visible(False)
		Gui.Form.pbStatus.Visible(False)
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.LoadData.End

Program.Sub.cmdApply_Click.Start
	f.Intrinsic.Control.Try
		'Block user for triggering any further actions on the screen while the data refreshes
		gui.Form.cmdApply.Enabled(False)
		gui.Form.frame1.Enabled(False)
		'Feedback for user
		gui.Form.pbStatus.Value(0)
		GUI.Form.lblProgress.Visible(True)
		GUI.Form.pbStatus.Visible(True)
		'Refresh inventory and requirements
		gui.form.lblProgress.Caption("Inv Check...")
		F.Intrinsic.Control.CallSub(InvCheck)
		'User feedback
		gui.form.lblProgress.Caption("Complete.")
		'Pause processing long enough for the user to see that everything is done
		f.Intrinsic.UI.Sleep(1)
		'Re-enable user controls
		gui.Form.cmdApply.Enabled(True)
		gui.Form.frame1.Enabled(True)
		'Hide feedback controls
		GUI.Form.lblProgress.Visible(False)
		GUI.Form.pbStatus.Visible(False)
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.cmdApply_Click.End

Program.Sub.GsGcDisplay_CellValueChanged.Start
	f.Intrinsic.Control.Try
		f.Intrinsic.Control.If(v.Args.column,=,"Vendor")
			f.Intrinsic.Control.CallSub("LoadCost","RowInd",v.Args.rowindex)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GsGcDisplay_CellValueChanged.End

Program.Sub.cmdCreatePOs_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.dDueDate.Declare
	V.Local.fExtension.Declare
	V.Local.sSelect.Declare
	V.Local.iPO.Declare
	V.Local.sPO.Declare
	V.Local.iPOLine.Declare
	V.Local.sPOLine.Declare
	V.Local.sFilter.Declare
	V.Local.sStatus.Declare
	V.Local.sReturnFileName.Declare
	V.Local.sSQL.Declare
	V.Local.sFileName.Declare
	V.Local.sPURORDER.Declare
	V.Local.sEmailList.Declare
	V.Local.sName.Declare
	V.Local.sNameSplit.Declare
	V.Local.sBuyerCode.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	v.Local.iSelect.Declare
	v.Local.iSelect2.Declare
	v.Local.sWO.Declare(String)
	v.Local.sWONum.Declare(String)
	v.Local.sWOSuf.Declare(String)
	v.Local.sWOSeq.Declare(String)
	v.Local.sParams.Declare(String)
	
'	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
'		F.Intrinsic.Control.Case(0)
'			f.Intrinsic.Control.If(v.Global.gvPO.Not)
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf
			V.Local.sGV.Set("gcDisplay")
			V.Local.sDT.Set("dtDisplay")
'		F.Intrinsic.Control.Case(1)
'			f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf		
'			V.Local.sGV.Set("gvPODrop")
'			V.Local.sDT.Set("dtPODrop")
'		F.Intrinsic.Control.Case(2)
'			f.Intrinsic.Control.If(v.Global.gvReqs.Not)
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf			
'			V.Local.sGV.Set("gvReqs")
'			V.Local.sDT.Set("dtReqs")
'	F.Intrinsic.Control.EndSelect
	
	V.Local.sEmailList.Set("***EMPTY***")
	
	'Get Buyer Code
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sName)
	F.Intrinsic.String.Split(V.Local.sName," ",V.Local.sNameSplit)
	F.Intrinsic.Control.If(V.Local.sNameSplit.UBound,=,2)
		F.Intrinsic.String.Build("{0} {1}",V.Local.sNameSplit(0),V.Local.sNameSplit(2),V.Local.sName)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Select Buyer_Code From V_Buyers Where Upper(Buyer) = Upper('{0}');",V.Local.sName,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sBuyerCode)
	F.Data.DataView.Create(V.Local.sDT,"dvPOVends",22,"Selected = True And Status = True","")
	F.Data.DataView.ToDataTableDistinct(V.Local.sDT,"dvPOVends","dtPOVends","Vendor",True)
	F.Data.DataView.Close(V.Local.sDT,"dvPOVends")
	'Create Grouped POs
		
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPOVends.RowCount--,1)
		F.Intrinsic.String.Build("Selected = True And Vendor = '{0}'",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,V.Local.sFilter)
		F.Data.DataTable.Select(V.Local.sDT,V.Local.sFilter,V.Local.sSelect)
		F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
			F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
			F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)
				'Set PO Number
				F.ODBC.Connection!con.ExecuteAndReturn("Select Last_PO_Num From Last_PO Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL';",V.Local.iPO)
				F.Intrinsic.String.LPad(V.Local.iPO.++,"0",7,V.Local.sPO)
				'Set PO Line
				F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iPOLine)
				F.Intrinsic.String.LPad(V.Local.iPOLine,"0",3,V.Local.sPOLine)
				'Set WO, suf, and seq
				f.Intrinsic.String.Split(v.DataTable.[v.Local.sDT](v.Local.iSelect).JobSufSeq!FieldVal,"-",v.Local.sWO)
				f.Intrinsic.Control.if(v.Local.sWO.UBound,=,2)
					v.Local.sWONum.Set(v.Local.sWO(0))
					v.Local.sWOSuf.Set(v.Local.sWO(1))
					v.Local.sWOSeq.Set(v.Local.sWO(2))
				f.Intrinsic.Control.EndIf
				'Create Upload File: PURORDER.txt
				v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt2))
				F.Intrinsic.Control.CallSub("GenerateGroupedPOs","PO",V.Local.sPO,"POLine",V.Local.sPOLine,"Vendor",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,"DueDate",V.DataTable.[V.Local.sDT](v.local.iSelect).PODueDate!FieldValTrim,"Part",V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](v.local.iSelect).Loc!FieldValTrim,"Description",V.DataTable.[V.Local.sDT](v.local.iSelect).Description!FieldValTrim,"UM",V.DataTable.[V.Local.sDT](v.local.iSelect).UM!FieldValTrim,"PL",V.DataTable.[V.Local.sDT](v.local.iSelect).PL!FieldValTrim,"Cost",V.DataTable.[V.Local.sDT](v.local.iSelect).POCost!FieldValTrim,"Qty",V.DataTable.[V.Local.sDT](v.local.iSelect).POQty!FieldValTrim,"BuyerCode",V.Local.sBuyerCode,"GLAccount","","ReqNo","","ReqLine","","WONum",v.Local.sWONum,"WOSeq",v.Local.sWOSeq,"WOSuf",v.Local.sWOSuf,"MfgPart",V.DataTable.[V.Local.sDT](v.local.iSelect).MPN!FieldValTrim,"MfgName",V.DataTable.[V.Local.sDT](v.local.iSelect).MFG!FieldValTrim)
				'Set data to text file variable
				F.Intrinsic.Control.If(V.Local.sPURORDER,=,"")
					V.Local.sPURORDER.Set(v.Args.POTEXT)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}{1}",V.Local.sPURORDER,V.Args.POTEXT,V.Local.sPURORDER)
				F.Intrinsic.Control.EndIf
				'Update On Order PO in Invenoty_Mstr (I1MST)
				F.Intrinsic.String.Build("Update Inventory_Mstr Set Qty_OnOrder_PO = Qty_OnOrder_PO + {0} Where Part = '{1}' And Location = '{2}';",V.DataTable.[V.Local.sDT](v.local.iSelect).POQty!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Loc!FieldValTrim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Next(V.Local.iCnt2)
			'Write PO info to PURORDER.txt
			F.Intrinsic.String.Build("{0}\PURORDER.txt",V.Caller.FilesDir,V.Local.sFileName)
			F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sPURORDER)
			'Upload PO File
			F.Global.Callwrapper.New("POUpload","Purchasing.PurchaseOrderUpload")
			F.Global.Callwrapper.SetProperty("POUpload","Mode",0)
			F.Global.Callwrapper.SetProperty("POUpload","FileName","PURORDER")
			F.Global.CallWrapper.Run("POUpload")
			F.Global.CallWrapper.GetProperty("POUpload","Status",V.Local.sStatus)
			F.Global.CallWrapper.GetProperty("POUpload","ReturnFileName",V.Local.sReturnFileName)
			'Update Last PO Number
			F.Intrinsic.String.Build("Update Last_PO Set Last_PO_Num = '{0}' Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL';",V.Local.sPO,V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.If(V.Local.sEmailList,=,"***EMPTY***")
				F.Intrinsic.String.Build("'{0}'",V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sEmailList,V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.EndIf
			'Delete PURORDER.txt
			F.Intrinsic.File.DeleteFile(V.Local.sFileName)
			V.Local.sPURORDER.Set("")
			
			'Open the PO for maintenance before adding another
			F.Intrinsic.String.ConcatCallWrapperArgs("O",V.Local.sPO,"",V.Local.sParams)
			F.Global.General.CallWrapperSync(175200,V.Local.sParams)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.Close("dtPOVends")
	
	'Remove Lines from DataTable
	F.Data.DataTable.Select(V.Local.sDT,"Selected = True And Vendor <> ''",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect2.Set(V.Local.sSelect(V.Local.iCnt))		
			'Delete Rows
			F.Data.DataTable.DeleteRow(V.Local.sDT,v.local.iSelect2)
			F.Data.DataTable.AcceptChanges(V.Local.sDT)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.SetValue(V.Local.sDT,-1,"Selected",False)
	F.Intrinsic.Control.EndIf

	'Emails
	f.Intrinsic.Control.If(v.Screen.form!ddlEmail.Text.Trim,<>,"Do Not Email")
		F.Intrinsic.Control.If(V.Local.sEmailList,<>,"***EMPTY***")
			F.Intrinsic.Control.CallSub(GenerateEmail,"EmailList",V.Local.sEmailList)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.cmdCreatePOs_Click.End

Program.Sub.GenerateGroupedPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sVenName.Declare
	V.Local.sVenAdd1.Declare
	V.Local.sVenAdd2.Declare
	V.Local.sVenState.Declare
	V.Local.sVenZip.Declare
	V.Local.sVenCity.Declare
	V.Local.sVenAttn.Declare
	V.Local.sVenGL.Declare
	V.Local.sGL.Declare
	V.Local.sCurrency.Declare
	V.local.sPODate.Declare
	V.local.sPODueDate.Declare
	V.Local.sRet.Declare
	V.Local.sTemp.Declare
	V.Local.sTempFull.Declare

	F.Intrinsic.Control.If(V.Args.POLine,=,001)
	'-------------------------------------------------------------------# Header #-------------------------------------------------------------------
		F.Intrinsic.String.Build("Select A.Vendor,A.Name_Vendor,A.Address1,A.Address2,A.City,A.Rec,A.State,A.Code_Zip,A.Country,A.Attention,A.Normal_GL_Account,B.Default_Currency As CurrencyCode From V_Vendor_Master A Left Join V_Vendor_Intl As B on A.Vendor = B.Vendor Where A.name_Vendor = '{0}';",V.Args.Vendor,V.Local.sSQL)
		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstVend",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstVend.EOF,=,False)
			V.Local.sVenName.set(V.ODBC.Con!rstVend.FieldVal!Name_Vendor)
			V.Local.sVenAdd1.set(V.ODBC.Con!rstVend.FieldVal!Address1)
			V.Local.sVenAdd2.set(V.ODBC.Con!rstVend.FieldVal!Address2)
			V.Local.sVenState.set(V.ODBC.Con!rstVend.FieldVal!State)
			V.Local.sVenZip.set(V.ODBC.Con!rstVend.FieldVal!Code_Zip)
			V.Local.sVenCity.set(V.ODBC.Con!rstVend.FieldVal!City)
			V.Local.sVenAttn.set(V.ODBC.Con!rstVend.FieldVal!Attention)
			V.Local.sVenGL.set(V.ODBC.Con!rstVend.FieldVal!Normal_GL_Account)
			V.Local.sCurrency.set(V.ODBC.Con!rstVend.FieldVal!CurrencyCode)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstVend.Close
		'PO Date
		F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYY",V.local.sPODate)
		'RequiredDate,DueDate
		F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	'A Record
		'PO,Rec Type
		F.Intrinsic.String.Concat(V.Args.PO,"  A",V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",12,V.Local.sTemp)
		'Buyer
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Args.BuyerCode," ",7,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Ship Via
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'FOB
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Terms
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",12,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'PO Date
		F.Intrinsic.String.Rpad(V.Local.sTemp," ",195,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",207,V.Local.sTemp)
		'Date Due
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",229,V.Local.sTemp)
		'GL Account
		V.Local.sGL.Set(V.Args.GLAccount)
		F.Intrinsic.Control.If(V.Local.sGL.Trim,=,"")
			V.Local.sGL.Set(V.Local.sVenGL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sGL,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",267,V.Local.sTemp)
		'Vendor #
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Vendor,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",298,V.Local.sTemp)
		'User 1
		F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'B Record
		'PO,Rec Type,Name Vendor
		F.Intrinsic.String.Concat(V.Args.PO,"  B",V.Local.sVenName,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd1,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd2,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenCity,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenState,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenZip,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAttn,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'C Record
		F.Intrinsic.String.Concat(V.Args.PO,"  C",V.DataTable.dtCompany(0).NAME_COMPANY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS1!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS2!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CITY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).STATE!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CODE_ZIP!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ATTENTION!FieldValTrim,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	F.Intrinsic.Control.EndIf
	
	'-------------------------------------------------------------------# Line #-------------------------------------------------------------------
	'PO, Line,Part
	F.Intrinsic.String.Concat(V.Args.PO,V.Args.POLine,V.Args.Part,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",30,V.Local.sTemp)
	'Loc
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Loc,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",32,V.Local.sTemp)
	'Description
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Description.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",62,V.Local.sTemp)
	'UM
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.UM.Trim,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",65,V.Local.sTemp)
	'Work Order Number
	F.Intrinsic.String.Concat(V.Local.sTemp,v.Args.WONum,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",71,V.Local.sTemp)
	'Work Order Sequence
	F.Intrinsic.String.Concat(V.Local.sTemp,v.Args.WOSeq,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",77,V.Local.sTemp)
	'Requisition Number
	F.Intrinsic.Control.If(V.Args.ReqNo.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"      ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqNo,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",87,V.Local.sTemp)
	'Taxable
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",100,V.Local.sTemp)
	'GL Account
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",121,V.Local.sTemp)
	'PL
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.PL.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",124,V.Local.sTemp)
	'Required Date Line DueDate
	F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",136,V.Local.sTemp)
	'Cost
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Cost,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",168,V.Local.sTemp)
	'Qty
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Qty,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",266,V.Local.sTemp)
	'Work Order Suffix
	F.Intrinsic.String.Concat(V.Local.sTemp,v.Args.wosuf,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",269,V.Local.sTemp)
	'Mfg Part
	F.Intrinsic.String.Concat(V.Local.sTemp,v.Args.MfgPart,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",292,V.Local.sTemp)
	'Mfg Name
	F.Intrinsic.String.Concat(V.Local.sTemp,v.Args.MfgName,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",339,V.Local.sTemp)
	'Currency
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sCurrency,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",548,V.Local.sTemp)
	'Requisition Line
	F.Intrinsic.Control.If(V.Args.ReqLine.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"   ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqLine,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",551,V.Local.sTemp)
	'Add line to variable that will be written to PURORDER.txt
	F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	
	'Return upload text
	F.Intrinsic.Variable.AddRV("POTEXT",V.Local.sTempFull)

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.GenerateGroupedPOs.End

Program.Sub.LoadPreviewEmails.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmPrevEmail.GsGCPrevEml.AddGridviewFromDatatable("gvEmails","dtEmails")
	Gui.frmPrevEmail.GsGCPrevEml.SuspendLayout()
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","MultiSelect",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","AllowSort",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","AllowFilter",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","Editable",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","ReadOnly",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","ShowGroupPanel",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","Enableappearanceoddrow",True)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","Visible",False)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","ShowCaption",False)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","Caption","PO")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","Caption","Vendor")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","Caption","Name")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","Caption","Email")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","Caption","Sender Name")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","Caption","Sender Email")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","Caption","Subject")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","Caption","Body")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","Caption","Files")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","Caption","Attachments")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","Caption","Preview")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","MinWidth","85")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","HeaderFontBold",True)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","HeaderHAlignment","Center")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellHAlignment","Center")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellBackColor","Gray")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellForeColor","White")
	
	Gui.frmPrevEmail.GsGCPrevEml.ResumeLayout()
	Gui.frmPrevEmail.GsGCPrevEml.MainView("gvEmails")
	
	Gui.frmPrevEmail..Show

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.LoadPreviewEmails.End

Program.Sub.cmdSavePreview_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sAttach.Declare
	V.Local.bAttach.Declare
	
	V.Local.sAttach.Set(V.Screen.frmEmail!txtAttach.Text)
	F.Intrinsic.Control.If(V.Local.sAttach.Trim,<>,"")
		V.Local.bAttach.Set(True)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.SetValue("dtEmails",V.Screen.frmEmail!txtRow.Text,"SenderName",V.Screen.frmEmail!txtSName.Text,"SenderEmail",V.Screen.frmEmail!txtSEmail.Text,"Contact_Name",V.Screen.frmEmail!txtRName.Text,"Contact_Email",V.Screen.frmEmail!txtREmail.Text,"Subject",V.Screen.frmEmail!txtSubject.Text,"Body",V.Screen.frmEmail!txtBody.Text,"AttachmentFiles",V.Screen.frmEmail!txtAttach.Text,"Attachments",V.Local.bAttach)
	Gui.frmEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSavePreview_Click.End

Program.Sub.GsGCPrevEml_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFilePath.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("Preview")
			Gui.frmEmail..Caption("Edit Email")
			Gui.frmEmail.txtSName.Text(V.DataTable.dtEmails(V.Args.RowIndex).SenderName!FieldValTrim)
			Gui.frmEmail.txtSEmail.Text(V.DataTable.dtEmails(V.Args.RowIndex).SenderEmail!FieldValTrim)
			Gui.frmEmail.txtRName.Text(V.DataTable.dtEmails(V.Args.RowIndex).Contact_Name!FieldValTrim)
			Gui.frmEmail.txtREmail.Text(V.DataTable.dtEmails(V.Args.RowIndex).Contact_Email!FieldValTrim)
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Args.RowIndex).Subject!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Args.RowIndex).Purchase_Order!FieldValTrim,V.Local.sSubject)
			Gui.frmEmail.txtSubject.Text(V.Local.sSubject)
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Args.RowIndex).Body!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Args.RowIndex).Purchase_Order!FieldValTrim,V.Local.sBody)
			F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.DataTable.dtEmails(V.Args.RowIndex).SenderName!FieldValTrim,V.Local.sBody)
			Gui.frmEmail.txtBody.Text(V.Local.sBody)
			Gui.frmEmail.txtAttach.Text(V.DataTable.dtEmails(V.Args.RowIndex).AttachmentFiles!FieldValTrim)
			Gui.frmEmail.txtRow.Text(V.Args.RowIndex)
			Gui.frmEmail..Show
			Gui.frmEmail.txtSName.SetFocus
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCPrevEml_RowCellClick.End

Program.Sub.cmdSend_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.sSender.Declare
	V.Local.sRecipient.Declare
	V.Local.sRecipientEmail.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	V.Local.sAttachments.Declare
	V.Local.sFiles.Declare
	V.Local.sFilePath.Declare
	V.Local.sFileName.Declare
	V.Local.sParams.Declare
	V.Local.iBIRunID.Declare
	V.Local.iLogID.Declare
	V.Local.sParamName.Declare
	V.Local.sParamVal.Declare
	V.Local.iRet.Declare
	V.Local.sCallingProgram.Declare
	
	Gui.frmPrevEmail.lblStatus.Visible(True)
	Gui.frmPrevEmail.pbStatus.Visible(True)
	Gui.frmPrevEmail.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.frmPrevEmail.pbStatus.Max(V.DataTable.dtEmails.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPrevEmail.pbStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtEmails.RowCount--,1)
		Gui.frmPrevEmail.pbStatus.Value(V.Local.iCnt)
		F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,<>,"")
			'Populate BI Table
			F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sParams)	
			F.Global.General.CallWrapperSyncBio(915000,V.Local.sParams)
			'Export File
			F.Global.BI.GetRunID(V.Local.iBIRunID)
			F.Global.BI.StartLogging(V.Local.iBIRunID,002801,-1,"",V.Local.iLogID)
			F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sAttachments)
			V.Local.sParamName.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")
			F.Intrinsic.String.Build("{0}*!*002801*!* *!* *!* *!* *!*{1}*!* *!*",V.Caller.Terminal,0,V.Local.sParamVal)
			F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLogID,V.Local.sParamName,V.Local.sParamVal,"",4,True,"",-1,"",0,V.Local.sAttachments,"",V.Local.iRet)
			F.Global.BI.StopLogging(V.Local.iLogID)
			'Recipient
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,";",",",V.Local.sRecipientEmail)
			F.Intrinsic.String.Build("{0}*!*{1}",V.DataTable.dtEmails(V.Local.iCnt).Contact_Name!FieldValTrim,V.Local.sRecipientEmail,V.Local.sRecipient)
			'Sender
			F.Intrinsic.String.Build("{0}*!*{1}",V.DataTable.dtEmails(V.Local.iCnt).SenderEmail!FieldValTrim,V.DataTable.dtEmails(V.Local.iCnt).SenderName!FieldValTrim,V.Local.sSender)
			'PO Attachments
			F.Intrinsic.String.Build("{0}.pdf*!*{1}\Orders\",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Caller.PluginsDir,V.Local.sAttachments)
			'Additional Attachments
			F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Attachments!FieldVal)
				F.Intrinsic.String.Split(V.DataTable.dtEmails(V.Local.iCnt).AttachmentFiles!FieldVal,V.Ambient.NewLine,V.Local.sFiles)
				F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sFiles.UBound,1)
					F.Intrinsic.String.Split(V.Local.sFiles(V.Local.iCnt2),"\",V.Local.sFileName)
					V.Local.sFileName.Set(V.Local.sFileName(V.Local.sFileName.UBound))
					F.Intrinsic.String.Replace(V.Local.sFiles(V.Local.iCnt2),V.Local.sFileName,"",V.Local.sFilePath)
					F.Intrinsic.String.Build("{0}@!@{1}*!*{2}",V.Local.sAttachments,V.Local.sFileName,V.Local.sFilePath,V.Local.sAttachments)
				F.Intrinsic.Control.Next(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf
			'Subject
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Subject!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sSubject)
			'Body
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Body!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sBody)
			F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.DataTable.dtEmails(V.Local.iCnt).SenderName!FieldValTrim,V.Local.sBody)
			'Calling Program
			F.Intrinsic.String.Build("Email PO-{0}",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sCallingProgram)
			'Send Email	
			F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,V.Local.sCallingProgram,V.Local.sSubject,V.Local.sSender,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttachments,False)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.frmPrevEmail.pbStatus.Value(V.DataTable.dtEmails.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPrevEmail.pbStatus.Value(100)
	F.Intrinsic.Control.EndIf
	
	Gui.frmPrevEmail.lblStatus.Visible(False)
	Gui.frmPrevEmail.pbStatus.Visible(False)
	Gui.frmPrevEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSend_Click.End

Program.Sub.frmEmail_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.frmEmail_UnLoad.End

Program.Sub.frmPrevEmail_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iRet.Declare
	
	F.Intrinsic.UI.Msgbox("Emails will not be sent out. Continue?","Continue?",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,=,6)
		Gui.frmPrevEmail..Visible(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.frmPrevEmail_UnLoad.End

Program.Sub.GenerateEmail.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSelect.Declare
	V.Local.iCnt.Declare
	V.Local.iUserID.Declare
	V.Local.sSenderName.Declare
	V.Local.sSenderEmail.Declare
	V.Local.sParams.Declare
	V.Local.iBIRunID.Declare
	V.Local.iLogID.Declare
	V.Local.sAttach.Declare
	V.Local.sParamName.Declare
	V.Local.sParamVal.Declare
	V.Local.iRet.Declare
	V.Local.sRecipient.Declare
	V.Local.sRecipientEmail.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	V.Local.sDir.Declare
	V.Local.bFile.Declare
	V.Local.sSQL.Declare
	V.Local.sCallingProgram.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtEmails.Exists)
		F.Data.DataTable.Close("dtEmails")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\Orders",V.Caller.PluginsDir,V.Local.sDir)
	F.Intrinsic.File.CreateDir(V.Local.sDir)

	'Check Subject Txt File
	F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject_Custom.txt",V.Caller.GasDir,V.Local.sSubject)
	F.Intrinsic.File.Exists(V.Local.sSubject,V.Local.bFile)
	F.Intrinsic.Control.If(V.Local.bFile,=,False)
		F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject.txt",V.Caller.GasDir,V.Local.sSubject)
	F.Intrinsic.Control.EndIf
	
	'Check Body Txt File
	F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body_Custom.txt",V.Caller.GasDir,V.Local.sBody)
	F.Intrinsic.File.Exists(V.Local.sBody,V.Local.bFile)
	F.Intrinsic.Control.If(V.Local.bFile,=,False)
		F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body.txt",V.Caller.GasDir,V.Local.sBody)
	F.Intrinsic.Control.EndIf
	
	'F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,Case When C.Name_Preferred <> '' Then RTrim(C.Name_Preferred)+' '+RTrim(C.Name_Last) Else RTrim(C.Name_Preferred)+' '+RTrim(C.Name_Last) End As Contact_Name,RTrim(C.Email1) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join Contact C On A.Vendor = C.Cust Where C.Pri_Cntct = 1 And A.Purchase_Order In ({0}) And C.Email1 <> '';",V.Args.EmailList,V.Local.sSQL)
	F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,RTrim(C.Email) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join V_Vendor_Addl C On A.Vendor = C.Vendor Where A.Purchase_Order In ({0}) And C.Email <> '';",V.Args.EmailList,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtEmails","con",V.Local.sSQL,True)
	
	F.Global.Security.GetUserId(V.Caller.User,V.Caller.CompanyCode,V.Local.iUserID)
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sSenderName)
	F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
	F.Intrinsic.Control.If(V.Local.sSenderEmail,=,"")
		F.Intrinsic.UI.Msgbox("Error in email procedure. The GS User does not have an email address associated with it in User Security Maintenance.")
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FrmPO!ddlEmail.Text,=,"Preview Email")
		F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,=,0)
			'F.Data.DataTable.Close("dtEmails")
			'F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,'' As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Where A.Purchase_Order In ({0});",V.Args.EmailList,V.Local.sSQL)
			F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,RTrim(C.Email) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join V_Vendor_Addl C On A.Vendor = C.Vendor Where A.Purchase_Order In ({0}) And C.Email <> '';",V.Args.EmailList,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Data.Datatable.AddColumn("dtEmails","SenderName",String,V.Local.sSenderName)
		F.Data.Datatable.AddColumn("dtEmails","SenderEmail",String,V.Local.sSenderEmail)
		'Subject
		F.Intrinsic.File.File2String(V.Local.sSubject,V.Local.sSubject)
		'Body
		F.Intrinsic.File.File2String(V.Local.sBody,V.Local.sBody)
		'Modify DataTable
		F.Data.Datatable.AddColumn("dtEmails","Subject",String,V.Local.sSubject)
		F.Data.Datatable.AddColumn("dtEmails","Body",String,V.Local.sBody)
		F.Data.Datatable.AddColumn("dtEmails","AttachmentFiles",String)
		F.Data.Datatable.AddColumn("dtEmails","Attachments",Boolean,False)
		F.Data.Datatable.AddColumn("dtEmails","Preview",String,"Preview")
		F.Intrinsic.Control.CallSub(LoadPreviewEmails)
		Gui.FrmPO.lblStatus.Visible(False)
		Gui.FrmPO.progBarStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.FrmPO.lblStatus.Caption("Sending Emails....")
		Gui.FrmPO.lblStatus.Visible(True)
		Gui.FrmPO.progBarStatus.Visible(True)
		Gui.FrmPO.tabPO.Enabled(False)
		Gui.FrmPO.progBarStatus.Min(0)
		F.Intrinsic.Control.If(V.Local.sSelect.UBound,<>,0)
			Gui.FrmPO.progBarStatus.Max(V.Local.sSelect.UBound)
		F.Intrinsic.Control.Else
			Gui.FrmPO.progBarStatus.Max(1)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtEmails.RowCount--,1)
			Gui.FrmPO.progBarStatus.Value(V.Local.iCnt)
			F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,<>,"")
				'Populate BI Table
				F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sParams)	
				F.Global.General.CallWrapperSyncBio(915000,V.Local.sParams)
				'Export File
				F.Global.BI.GetRunID(V.Local.iBIRunID)
				F.Global.BI.StartLogging(V.Local.iBIRunID,002801,-1,"",V.Local.iLogID)
				F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sAttach)
				V.Local.sParamName.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")
				F.Intrinsic.String.Build("{0}*!*002801*!* *!* *!* *!* *!*{1}*!* *!*",V.Caller.Terminal,0,V.Local.sParamVal)
				F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLogID,V.Local.sParamName,V.Local.sParamVal,"",4,True,"",-1,"",0,V.Local.sAttach,"",V.Local.iRet)
				F.Global.BI.StopLogging(V.Local.iLogID)
				'Prepare Email
				F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,";",",",V.Local.sRecipientEmail)
				F.Intrinsic.String.Build("{0}*!*{0}",V.Local.sRecipientEmail,V.Local.sRecipient)
				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSenderName,V.Local.sSenderEmail)
				F.Intrinsic.String.Build("{0}.pdf*!*{1}\Orders\",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Caller.PluginsDir,V.Local.sAttach)
				'Subject
				F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject.txt",V.Caller.GasDir,V.Local.sSubject)
				F.Intrinsic.File.File2String(V.Local.sSubject,V.Local.sSubject)
				F.Intrinsic.String.Replace(V.Local.sSubject,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sSubject)
				'Body
				F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body.txt",V.Caller.GasDir,V.Local.sBody)
				F.Intrinsic.File.File2String(V.Local.sBody,V.Local.sBody)
				F.Intrinsic.String.Replace(V.Local.sBody,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sBody)
				F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.Local.sSenderName,V.Local.sBody)
				'Calling Program
				F.Intrinsic.String.Build("Email PO-{0}",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sCallingProgram)
				'Send Email				
				F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,V.Local.sCallingProgram,V.Local.sSubject,V.Local.sSenderEmail,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttach,False)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	Gui.FrmPO.lblStatus.Visible(False)
	Gui.FrmPO.progBarStatus.Visible(False)
	Gui.FrmPO.tabPO.Enabled(True)

	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.GenerateEmail.End

Program.Sub.LockScreen.Start
	F.Intrinsic.Control.Try	
		gui.Form..Enabled(false)
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.LockScreen.End

Program.Sub.EnableScreen.Start
	F.Intrinsic.Control.Try
		gui.Form..Enabled(true)
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.EnableScreen.End

'-----------------------------------------	TO TEST	--------------------------------------------


'-----------------------------------------	TO DO	-------------------------------------------


'-----------------------------------------	NOT NEEDED	--------------------------------------------

Program.Sub.LoadMRP2.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.iNext.Declare
	V.Local.sFilter.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fQty.Declare
	V.Local.fNextQty.Declare
	V.Local.fDiff.Declare
	V.Local.fDiff2.Declare
	V.Local.sPurchase.Declare
	V.Local.fPurchase.Declare
	V.Local.fDecimal.Declare
	V.Local.fPostOnHand.Declare
	V.Local.fOrderQty.Declare
	V.Local.fOnHandQty.Declare
	V.Local.fReqdQty.Declare
	V.Local.fOnOrder.Declare
	V.Local.fReOrderQty.Declare
	V.Local.sPartDesc.Declare
	V.Local.fLeadTime.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sPL.Declare
	V.Local.sSortCode.Declare
	V.Local.sUM.Declare
	V.Local.sUMPurch.Declare
	V.Local.fConversion.Declare
	V.Local.dDateDue.Declare
	V.Local.sVendor.Declare
	V.Local.sSign.Declare
	V.Local.sSQL.Declare
	V.Local.sSQL2.Declare(String)
	V.Local.dCutoff.Declare
	V.Local.fCommit.Declare
	v.Local.fOnHandSum.Declare
	V.Local.dDateDuePO.Declare
	V.Local.sSelect.Declare
	V.Local.sROPParts.Declare
	v.Local.iSelect.Declare

	F.Intrinsic.Control.If(V.DataTable.dtJobs.Exists)
		F.Data.DataTable.Close("dtJobs")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
		F.Data.DataTable.Close("dtMRP")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.Form!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtJobs","con","SELECT PART,LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS UNION SELECT PART,LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES ORDER BY PART,DATE_DUE ASC;",True)
	F.Intrinsic.Control.Else
		V.Local.dCutoff.Set(V.Screen.Form!dtpCutoff.Value)
		F.Intrinsic.String.Build("SELECT A.PART,A.LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_DUE) <= '{0}' UNION SELECT A.PART,A.LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_ITEM_PROM) <= '{0}' ORDER BY PART,DATE_DUE ASC;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtJobs","con",V.Local.sSQL,True)
	F.Intrinsic.Control.EndIf
	
	'Add in Reorder Point Parts
	F.Data.DataTable.Select("dtInvCheck","BALANCE < 0 AND QTY_REQUIRED = 0",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
			v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt))
			F.Intrinsic.String.Replace(V.DataTable.dtInvCheck(v.Local.iSelect).PMAST!FieldVal,"'","''",V.Local.sPart)
			F.Intrinsic.Control.If(V.Local.iCnt,=,0)
				F.Intrinsic.String.Build("'{0}'",v.Local.sPart,V.Local.sROPParts)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sROPParts,V.Local.sPart,V.Local.sROPParts)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.String.Build("SELECT PART,LOCATION,'Reorder Point' AS SOURCE,'' AS JOB,'' AS SUFFIX,'' AS SEQUENCE,QTY_REORDER-QTY_ONHAND AS QUANTITY,CURDATE() AS DATE_DUE FROM V_INVENTORY_MSTR WHERE PART+LOCATION IN ({0});",V.Local.sROPParts,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtROPParts","con",V.Local.sSQL,True)
		F.Data.DataTable.Merge("dtROPParts","dtJobs",True,3)
		F.Data.DataTable.Close("dtROPParts")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,=,0)
		Gui.Form.lblStatus.Visible(False)
		Gui.Form.pbStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	Gui.Form.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,<>,0)
		Gui.Form.pbStatus.Max(V.DataView.dtInvCheck!dvInvCheck.RowCount)
	F.Intrinsic.Control.Else
		Gui.Form.pbStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtInvCheck!dvInvCheck.RowCount--,1)
		Gui.Form.pbStatus.Value(V.Local.iCnt)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"'","''",V.Local.sLoc)
		F.Intrinsic.String.Build("PART = '{0}' AND LOCATION = '{1}'",V.Local.sPart,V.Local.sLoc,V.Local.sFilter)
		F.Data.DataView.Create("dtJobs","dvJobs",22,V.Local.sFilter,"PART ASC,LOCATION ASC,DATE_DUE ASC")
		
		V.Local.iCnt2.Set(0)
		V.Local.iNext.Set(0)
		V.Local.fQty.Set(0)
		V.Local.fNextQty.Set(0)
		V.Local.fDiff.Set(0)
		V.Local.fDiff2.Set(0)
		V.Local.fPurchase.Set(0)
		V.Local.sPurchase.Set("")
		V.Local.sSign.Set("")
		V.Local.fDecimal.Set(0)
		V.Local.fPostOnHand.Set(0)
		V.Local.fCurOnHand.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CurOnHand!FieldValFloat)
		V.Local.sPartDesc.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).DESCRIPTION!FieldValTrim)
		V.Local.fLeadTime.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).TIME_MATERIAL_LEAD!FieldValFloat)
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		V.Local.fOnHandQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat)
		V.Local.fReqdQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REQUIRED!FieldValFloat)
		V.Local.fOnOrder.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONORDER_PO!FieldValFloat)
		V.Local.fReOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Ambient.Date,V.Local.dDateDue)
		V.Local.sPL.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PRODUCT_LINE!FieldValTrim)
		V.Local.sSortCode.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CODE_SORT!FieldValTrim)
		V.Local.sUM.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_INVENTORY!FieldValTrim)
		V.Local.sUMPurch.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_PURCHASING!FieldValTrim)
		V.Local.fConversion.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).FACTOR_CONVERSION!FieldValTrim)
		V.Local.sVendor.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).NAME_VENDOR!FieldValTrim)
		F.Intrinsic.Math.Add(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_WO!FieldValFloat,V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_SO!FieldValFloat,V.Local.fCommit)
		F.Intrinsic.Math.Add(V.Local.fOnHandQty,V.Local.fOnOrder,V.Local.fOnHandSum)
		
		F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists,=,False)
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRP",True)
			F.Data.DataTable.AddColumn("dtMRP","CurOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","CurOnHand2",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","Purchase",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","PostOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","Description",String,"")
			F.Data.DataTable.AddColumn("dtMRP","Vendor",String,"")
			F.Data.DataTable.AddColumn("dtMRP","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRP","SortCode",String,"")
			F.Data.DataTable.AddColumn("dtMRP","LeadTime",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OrderQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OnHandQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ReqdQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OnOrder",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ReOrderPt",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","UM",String,"")
			F.Data.DataTable.AddColumn("dtMRP","UMPurch",String,"")
			F.Data.DataTable.AddColumn("dtMRP","Conversion",Float,0)
		F.Intrinsic.Control.Else
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRPMerge",True)
			F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand2",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","Purchase",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","PostOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","Description",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","Vendor",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","SortCode",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","LeadTime",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OrderQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OnHandQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ReqdQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OnOrder",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ReOrderPt",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","UM",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","UMPurch",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","Conversion",Float,0)
			F.Data.DataTable.Merge("dtMRPMerge","dtMRP",True,3)
			F.Data.DataTable.Close("dtMRPMerge")
		F.Intrinsic.Control.EndIf
		'Create MRP DataView
		F.Data.DataView.Create("dtMRP","dvMRP",22,V.Local.sFilter,"DATE_DUE ASC,JOB ASC,SUFFIX ASC")
		
		'Retrieve amount to purchase
		F.Intrinsic.Math.Add(V.Local.fReqdQty,V.Local.fReOrderQty,V.Local.fDiff)
'		F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fOnHandQty,V.Local.fDiff)
		F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fCurOnHand,V.Local.fDiff)
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
			V.Local.fOrderQty.Set(1)
'			V.Local.fPurchase.Set(V.Local.fReOrderQty)
			V.Local.fPurchase.Set(V.Local.fDiff)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Div(V.Local.fDiff,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
		F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
		V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
		F.Intrinsic.Control.If(V.Local.sPurchase(1),<>,"OOB")
			F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
			V.Local.fDecimal.Set(V.Local.sPurchase.Float)
			F.Intrinsic.Control.If(V.Local.fDecimal,>,0)
				F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,1)
		F.Intrinsic.Control.AndIf(V.Local.fPurchase,=,1)
			F.Intrinsic.Math.Mult(V.Local.fDiff,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.EndIf
		
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		
		'MRP Part
		F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
			V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
			V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
			
			F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
				V.Local.fDiff.Set(V.Local.fOnHandQty)
				F.Intrinsic.Math.Sub(V.Local.fOnHandQty,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.Else
				V.Local.fDiff.Set(V.Local.fPostOnHand)
				F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.If(V.Local.fPostOnHand,>=,V.Local.fReOrderQty)
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",0,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
			F.Intrinsic.Control.Else
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
				F.Intrinsic.Control.ExitFor(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt2)
		
		F.Data.DataView.Close("dtMRP","dvMRP")
		F.Data.DataView.Close("dtJobs","dvJobs")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.CallSub(LoadPOs)
	
	F.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.EndTry
Program.Sub.LoadMRP2.End

Program.Sub.GsGcPOHistory_RowCellClick.Start
	V.Local.sPO.Declare(String)
	v.Local.sOpenCode.Declare(String)
	v.Local.sParams.Declare(String)
	
	f.Intrinsic.Control.Try
		f.Intrinsic.Control.SelectCase(v.Args.column)
			F.Intrinsic.Control.Case("PO")
				Gui.form.GsGcPOHistory.GetCellValueByColumnName("gvPOHist","PO",V.Args.RowIndex,V.Local.sPO)
				'OpenCode: O for open PO, H for PO History
				Gui.form.GsGcPOHistory.GetCellValueByColumnName("gvPOHist","OpenCode",V.Args.RowIndex,V.Local.sOpenCode)
				'Open PO screen
				F.Intrinsic.String.Concat(v.Local.sOpenCode,"!*!",V.Local.sPO,"!*!",V.Local.sParams)
				f.Intrinsic.Control.CallSub(LockScreen)
				F.Global.General.CallWrapperSync(175200,V.Local.sParams)
				f.Intrinsic.Control.CallSub(EnableScreen)
		f.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.Catch
		f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.GsGcPOHistory_RowCellClick.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$dduncan$}$20200317152951055$}$r0o+00bj735YsiGsQ60YIo/Zb+26OZQGKzAB9/vIpbzzzohYIYsy3Zg23BYtL/1SwtKP4l6jUiw=
Program.Sub.Comments.End